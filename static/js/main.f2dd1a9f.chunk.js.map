{"version":3,"sources":["components/Start/SimpleModal/SimpleModal.js","components/Start/FormikModal/YupSchema.js","components/Start/FormikModal/FormikModal.js","components/Start/Start.js","App.js","serviceWorker.js","index.js"],"names":["SimpleModal","props","simpleModal","email","emailReq","password","passwordReq","checkbox","checkboxReq","className","action","onSubmit","closeSimpleModal","name","type","placeholder","value","onChange","handleChange","onBlur","isRequired","minLength","id","checked","htmlFor","style","color","href","target","YupSchema","Yup","required","min","oneOf","FormikModal","formikModal","initialValues","validationSchema","values","setSubmitting","resetForm","setTimeout","closeFormikModal","Start","state","showModal","openSimpleModal","bind","openFormikModal","this","setState","e","preventDefault","console","log","valueToUpdate","onClick","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f2dd1a9f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SimpleModal.scss';\r\n\r\nconst SimpleModal = (props) => {\r\n    const { email, emailReq, password, passwordReq, checkbox, checkboxReq } = { ...props.simpleModal };\r\n    return (\r\n        <div className=\"SimpleModal\">\r\n            <form className=\"form\"\r\n                action=\"#\"\r\n                // method=\"post\"\r\n                onSubmit={props.closeSimpleModal}\r\n            >\r\n                <div className=\"form__title\">Sing in to your account</div>\r\n                <input\r\n                    className={emailReq ? \"form__email req__border\" : \"form__email\"}\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder={emailReq ? \"email required\" : \"yourmail@gmail.com\"}\r\n\r\n                    value={email}\r\n                    onChange={props.handleChange}\r\n                    onBlur={props.isRequired}\r\n\r\n                />\r\n\r\n                <input\r\n                    className={passwordReq ? \"form__password req__border\" : \"form__password\"}\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder={passwordReq ? \"password required\" : \"******\"}\r\n                    minLength=\"6\"\r\n                    value={password}\r\n                    onChange={props.handleChange}\r\n                    onBlur={props.isRequired}\r\n\r\n\r\n\r\n                />\r\n                <div className=\"checkbox__wrap\">\r\n                    <input\r\n                        className=\"form__checkbox req__border\"\r\n                        id=\"checkboxSimple\"\r\n                        name=\"checkbox\"\r\n                        type=\"checkbox\"\r\n                        onChange={props.handleChange}\r\n                        checked={checkbox}\r\n                    />\r\n                    <label htmlFor=\"checkboxSimple\" className=\"label \">\r\n                        {(checkboxReq && !checkbox) ?\r\n                            <span style={{ color: \"red\" }}>Checkbox required</span> :\r\n                            `Keep me signed in`}\r\n                    </label>\r\n                </div>\r\n                <input\r\n                    className=\"form__button\"\r\n                    type=\"submit\"\r\n                    value=\"sign in\"\r\n                // onClick={props.closeSimpleModal}\r\n                />\r\n                <div className=\"form__forgot\">\r\n                    <a className=\"form__link\" href=\"http://www.google.com\" target=\"blank\">Forgot your password?</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleModal;","import * as Yup from \"yup\";\r\n\r\nconst YupSchema = Yup.object({\r\n    email: Yup.string()\r\n        .email(\"Invalid email address\")\r\n        .required(\"Email Required\"),\r\n\r\n    password: Yup.string()\r\n        .min(4, \"Must be longer than 3 characters\")\r\n        .required(\"Password required\"),\r\n\r\n    checkbox: Yup.bool()\r\n        .oneOf([true], 'Accept is required')\r\n});\r\nexport default YupSchema;","import React from 'react';\r\nimport './FormikModal.scss';\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport YupSchema from './YupSchema';\r\n\r\nconst FormikModal = (props) => {\r\n    const { email, emailReq, password, passwordReq, checkbox, checkboxReq } = { ...props.formikModal };\r\n\r\n    return (\r\n        <div className=\"FormikModal\">\r\n            <Formik\r\n                initialValues={{\r\n                    email: email,\r\n                    password: password,\r\n                    checkbox: checkbox\r\n                }}\r\n                validationSchema={YupSchema}\r\n\r\n                handleChange={props.handleChange}\r\n\r\n                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                    setTimeout(() => {\r\n                        // alert(JSON.stringify(values, null, 2));\r\n                        props.closeFormikModal(values);\r\n                        resetForm();\r\n                        // console.log(values);\r\n                        // setSubmitting(false);\r\n                    }, 400);\r\n                }}\r\n            >\r\n\r\n                {/* {({ errors, touched }) => ( */}\r\n\r\n                <Form className=\"form\"\r\n\r\n                >\r\n\r\n                    <div className=\"form__title\">Sing in to your account</div>\r\n                    <Field\r\n                        className=\"form__email\"\r\n                        name=\"email\"\r\n\r\n                        placeholder=\"yourmail@gmail.com\"\r\n                    // value={email.value}\r\n                    // onChange={props.handleChange}\r\n                    // onBlur={props.isRequired}\r\n\r\n                    />\r\n\r\n                    <div className=\"error__message\">\r\n                        <ErrorMessage className=\"error__message\" name=\"email\" />\r\n                    </div>\r\n\r\n                    <Field\r\n                        className=\"form__password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"******\"\r\n\r\n                    // value={password}\r\n                    // onChange={props.handleChange}\r\n                    // onBlur={props.isRequired}\r\n                    />\r\n                    <div className=\"error__message\">\r\n                        <ErrorMessage name=\"password\" />\r\n                    </div>\r\n\r\n                    <div className=\"checkbox__wrap\">\r\n                        <Field\r\n                            className=\"form__checkbox \"\r\n                            id=\"checkboxFormik\"\r\n                            name=\"checkbox\"\r\n                            type=\"checkbox\"\r\n                        // onChange={props.handleChange}\r\n                        // checked={checkbox}\r\n                        />\r\n                        <label htmlFor=\"checkboxFormik\" className=\"label \">\r\n                            {(checkboxReq && !checkbox) ?\r\n                                <span style={{ color: \"red\" }}>Checkbox required</span> :\r\n                                `Keep me signed in`}\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"error__message\">\r\n                        <ErrorMessage name=\"checkbox\" />\r\n                    </div>\r\n                    {/* {console.log(errors)} */}\r\n                    <input\r\n                        className=\"form__button\"\r\n                        type=\"submit\"\r\n                        value=\"sign in\"\r\n                    />\r\n                    <div className=\"form__forgot\">\r\n                        <a className=\"form__link\" href=\"http://www.google.com\" target=\"blank\">Forgot your password?</a>\r\n                    </div>\r\n                </Form>\r\n                {/* )} */}\r\n            </Formik>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default FormikModal;","import React, { Component } from 'react';\r\nimport './Start.scss';\r\nimport SimpleModal from './SimpleModal/SimpleModal';\r\nimport FormikModal from './FormikModal/FormikModal';\r\n\r\nclass Start extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            simpleModal: {\r\n                showModal: false,\r\n                email: '',\r\n                password: '',\r\n                checkbox: false,\r\n                emailReq: false,\r\n                passwordReq: false,\r\n                checkboxReq: false\r\n            },\r\n            formikModal: {\r\n                showModal: false,\r\n                email: '',\r\n                password: '',\r\n                checkbox: false,\r\n                emailReq: false,\r\n                passwordReq: false,\r\n                checkboxReq: false\r\n            }\r\n        }\r\n        this.openSimpleModal = this.openSimpleModal.bind(this);\r\n        this.openFormikModal = this.openFormikModal.bind(this);\r\n        this.closeSimpleModal = this.closeSimpleModal.bind(this);\r\n        this.closeFormikModal = this.closeFormikModal.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.isRequired = this.isRequired.bind(this);\r\n    }\r\n\r\n    async openSimpleModal() {\r\n        await this.setState({\r\n            simpleModal: {\r\n                ...this.state.simpleModal,\r\n                showModal: true,\r\n                email: '',\r\n                password: '',\r\n                checkbox: false,\r\n                emailReq: false,\r\n                passwordReq: false,\r\n                checkboxReq: false\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n    async openFormikModal() {\r\n        await this.setState({\r\n            formikModal: {\r\n                ...this.state.formikModal,\r\n                showModal: true,\r\n                email: '',\r\n                password: '',\r\n                checkbox: false,\r\n                emailReq: false,\r\n                passwordReq: false,\r\n                checkboxReq: false\r\n\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n    async   closeSimpleModal(e) {\r\n        e.preventDefault();\r\n        const { email, password, checkbox } = this.state.simpleModal;\r\n        if (!email || !password || !checkbox) {\r\n            if (!email) {\r\n                await this.setState({\r\n                    simpleModal: { ...this.state.simpleModal, emailReq: true }\r\n                })\r\n            }\r\n            if (!password) {\r\n                await this.setState({\r\n                    simpleModal: { ...this.state.simpleModal, passwordReq: true }\r\n                })\r\n            }\r\n            if (!checkbox) {\r\n                await this.setState({\r\n                    simpleModal: { ...this.state.simpleModal, checkboxReq: true }\r\n                })\r\n            }\r\n\r\n            return;\r\n        } else {\r\n            await this.setState({\r\n                simpleModal: { ...this.state.simpleModal, showModal: false }\r\n            })\r\n        }\r\n\r\n    }\r\n    async closeFormikModal(values) {\r\n        // e.preventDefault();\r\n        const { email, password, checkbox } = values;\r\n        await this.setState({\r\n\r\n            formikModal: { ...this.state.formikModal, showModal: false, email, password, checkbox }\r\n        })\r\n        console.log(this.state.formikModal);\r\n    }\r\n    handleChange(e) {\r\n        const { checked, name, value, type } = e.target;\r\n        const valueToUpdate = type === \"checkbox\" ? checked : value;\r\n        this.setState({\r\n            simpleModal: { ...this.state.simpleModal, [name]: valueToUpdate }\r\n        })\r\n        console.log(e.target.value);\r\n    }\r\n    isRequired(e) {\r\n        e.target.className = e.target.value ? `form__${e.target.name}` : `form__${e.target.name} req__border`;\r\n        e.target.placeholder = e.target.value ? null : `${e.target.name} required`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Start\">\r\n                <div className=\"title\">React forms</div>\r\n                <button className=\"button\" onClick={this.openSimpleModal}>Registration Simple</button>\r\n                <button className=\"button\" onClick={this.openFormikModal}>Registration Formik</button>\r\n                {this.state.simpleModal.showModal ?\r\n                    <SimpleModal\r\n                        simpleModal={this.state.simpleModal}\r\n                        closeSimpleModal={this.closeSimpleModal}\r\n                        handleChange={this.handleChange}\r\n                        isRequired={this.isRequired}\r\n                    /> : null}\r\n                {this.state.formikModal.showModal ?\r\n                    <FormikModal\r\n                        formikModal={this.state.formikModal}\r\n                        closeFormikModal={this.closeFormikModal}\r\n                        handleChange={this.handleChange}\r\n                        isRequired={this.isRequired}\r\n                    /> : null}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Start;","import React from 'react';\nimport './App.css';\nimport Start from './components/Start/Start';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Start />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}